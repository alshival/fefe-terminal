from openai import OpenAI
import requests 
from src import functions
from src import open_image
import os 
spec =     {
        "type": "function",
        "function": {
            "name": "image_gen",
            "description": "Generate images. Not for generating data visualizations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "prompt": {
                        "type": "string",
                        "description": "Prompt to pass onto the image generator."
                    },
                    "filepath": {
                        "type": "string",
                        "description": "Path where the image will be saved. Usually in the local directory, such as `./<filename>.png`"
                    }
                },
                "required": ["prompt","filepath"]
            }
        }
    }

def image_gen(prompt,filepath):
    try:
        api_key, org_id, os_info, personality, user_display_name = functions.get_config()
        client = OpenAI(
            api_key=api_key,
            organization=org_id
        ) 
        response = client.images.generate(
            model="dall-e-3",
            prompt=prompt,
            size="1024x1024",
            quality="standard",
            n=1,
        )
        image_url = response.data[0].url
        response = requests.get(image_url)
        with open(filepath,'wb') as file:
            file.write(response.content)
        functions.update_chat_history({'role':'user','content':[
            {'type':'text','text': "Here is the image generated by the assistant."},
            {"type": "image_url", "image_url": {"url": image_url}}
        ]})
        open_image.open_image(filepath)
        return True, None
    except Exception as e:
        return False,e